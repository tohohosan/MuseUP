<div class="flex flex-col items-center mb-4 mt-2 space-y-4">
  <button class="btn btn-primary w-1/2" onclick="searchModal.showModal()">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
      <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
    </svg>
    詳しく検索する
  </button>

  <!-- リセットボタン -->
  <%= link_to '現在の検索条件をリセット', museums_path, class: "btn btn-secondary w-1/2", data: { turbo: false } %>
</div>

<div class="flex justify-center items-center mt-6 mb-6 w-full">
  <div class="stats shadow">
    <div class="stat place-items-center">
      <div class="stat-title">全体で投稿されたミュージアムの数</div>
      <div class="stat-value"><%= @total_museum_count %></div>
    </div>

    <div class="stat place-items-center">
      <div class="stat-title">あなたが投稿したミュージアムの数</div>
        <% if user_signed_in? %>
          <div class="stat-value"><%= @user_museum_count %></div>
        <% else %>
          <div class="stat-value">0</div>
        <% end %>
    </div>
  </div>
</div>

<% if params[:q].present? && @q.result.any? %>
  <div class="stat place-items-center">
    <div class="stat-title">検索結果件数</div>
    <div class="stat-value"><%= @search_results_count %></div>
  </div>
<% end %>

<div id="museum-data" style="display: none;">
  <%= raw @museums.to_json(only: [:id, :name, :latitude, :longitude]) %>
</div>

<div id="map" style="height: 1000px;"></div>

<!-- ミュージアムの一覧と Ransack での検索結果の表示 -->
<script>
  function initMap() {
    const mapElement = document.getElementById("map");
    if (!mapElement) return; // マップ要素が存在しない場合は終了

    const center = <%= raw @map_center.to_json %>;
    const mapOptions = {
      center: center,
      zoom: 7.3
    };
    const map = new google.maps.Map(mapElement, mapOptions);

    // ミュージアムデータを取得
    const museumDataElement = document.getElementById('museum-data');
    if (!museumDataElement) return; // データ要素が存在しない場合は終了

    const museums = JSON.parse(museumDataElement.textContent)

    // 検索結果がある場合、マーカーを追加
    if (museums.length > 0) {
      addMarkersToMap(museums, map);
    } else {
      alert("該当するミュージアムがありません。地図の中心を初期位置に設定しました。");
    }
  }

  function addMarkersToMap(museums, map) {
    museums.forEach((museum) => {
      const marker = new google.maps.Marker({
        position: { lat: museum.latitude, lng: museum.longitude },
        map: map,
        title: museum.name,
      });

      marker.addListener('click', () => {
        fetch(`/museums/${museum.id}.json`)
          .then((response) => response.json())
          .then((data) => {
            if (data && data.name && data.description) {
              document.getElementById('museumTitle').innerText = data.name;
              document.getElementById('museumDescription').innerText = data.description;
              document.getElementById('museumDetailLink').href = `/museums/${museum.id}`;
              document.getElementById('museumDetailModal').showModal();
            } else {
              console.error("Unexpected data format:", data);
            }
          })
          .catch(error => console.error('Error fetching museum details:', error)
          );
      });
    });
  }

  function fetchNearestMuseum(userLocation) {
    fetch(`/museums/nearest?latitude=${userLocation.lat}&longitude=${userLocation.lng}`)
      .then((response) => response.json())
      .then((data) => {
        if (data.museum) {
          const mapElement = document.getElementById('map');
          const map = new google.maps.Map(mapElement, {
            center: userLocation,
            zoom: 11,
          });

          // 現在地をマップに追加
          new google.maps.Marker({
            position: userLocation,
            map: map,
            title: "現在地",
            icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png",
          });

          // 最寄りのミュージアムをマップに追加
          addMarkersToMap([data.museum], map);
        } else {
          alert("近くにミュージアムが見つかりませんでした。");
        }
      })
    .catch((error) => {
      console.error("エラーが発生しました:", error);
    });
  }

  document.getElementById("location-search-btn").addEventListener("click", () => {
    if (!navigator.geolocation) {
      alert("お使いのブラウザは位置情報をサポートしていません。");
      return;
    }

    navigator.geolocation.getCurrentPosition(
      (position) => {
        const userLocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        };
        fetchNearestMuseum(userLocation);
        document.getElementById("searchModal").close();
      },
      (error) => {
        alert("現在地を取得できませんでした: " + error.message);
      }
    );
  });
</script>

<!-- 検索モーダルの表示 -->
<dialog id="searchModal" class="modal">
  <div class="modal-box space-y-4">

    <%= render 'museums/search_form' %>

    <div class="modal-action">
      <button class="btn btn-outline" onclick="searchModal.close()">閉じる</button>
    </div>
  </div>
</dialog>

<!-- ミュージアム概要モーダルの表示 -->
<dialog id="museumDetailModal" class="modal">
  <div class="modal-box">
    <h3 id="museumTitle" class="text-lg font-bold">ミュージアム詳細</h3>

    <div id="museumOverview">
      <%= render 'museums/overview' %>
    </div>

    <div class="modal-action">
      <button class="btn" onclick="document.getElementById('museumDetailModal').close()">閉じる</button>
      <a id="museumDetailLink" class="btn" href="#" target="_blank">詳細</a>
    </div>
  </div>
</dialog>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&libraries=places&callback=initMap" async defer></script>
